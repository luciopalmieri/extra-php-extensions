/*
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.0 of the PHP license,       |
   | that is bundled with this package in the file LICENSE, and is        |
   | available through the world-wide-web at the following url:           |
   | http://www.php.net/license/3_0.txt.                                  |
   | If you did not receive a copy of the PHP license and are unable to   |
   | obtain it through the world-wide-web, please send a note to          |
   | license@php.net so we can mail you a copy immediately.               |
   +----------------------------------------------------------------------+
   | Authors: Evan Klinger <eklinger@phash.org>                           |
   +----------------------------------------------------------------------+
*/

/* $ Id: $ */

#include "php_pHash.h"


#if HAVE_PHASH


/* {{{ Resource destructors */

int le_ph_image_hash;
extern "C" void ph_image_hash_dtor(zend_resource *rsrc TSRMLS_DC) {
    ulong64 *resource = (ulong64 *)(rsrc->ptr);

    if (resource) free(resource);
}

/* }}} */

/* {{{ pHash_functions[] */
zend_function_entry pHash_functions[] = {
        PHP_FE(ph_dct_imagehash, ph_dct_imagehash_arg_info)
        PHP_FE(ph_image_dist, ph_image_dist_arg_info)};
/* }}} */

/* {{{ pHash_module_entry
 */
zend_module_entry pHash_module_entry = {
    STANDARD_MODULE_HEADER, "pHash",           pHash_functions,
    PHP_MINIT(pHash),     /* Replace with NULL if there is nothing to do at php
                             startup   */
    PHP_MSHUTDOWN(pHash), /* Replace with NULL if there is nothing to do at php
                             shutdown  */
    PHP_RINIT(pHash), /* Replace with NULL if there is nothing to do at request
                         start */
    PHP_RSHUTDOWN(pHash), /* Replace with NULL if there is nothing to do at
                             request end   */
    PHP_MINFO(pHash),       PHP_PHASH_VERSION, STANDARD_MODULE_PROPERTIES};
/* }}} */

#ifdef COMPILE_DL_PHASH
extern "C" {
ZEND_GET_MODULE(pHash)
}  // extern "C"
#endif

/* {{{ PHP_MINIT_FUNCTION */
PHP_MINIT_FUNCTION(pHash) {
    le_ph_image_hash = zend_register_list_destructors_ex(
        ph_image_hash_dtor, NULL, "ph_image_hash", module_number);

    return SUCCESS;
}
/* }}} */

/* {{{ PHP_MSHUTDOWN_FUNCTION */
PHP_MSHUTDOWN_FUNCTION(pHash) {

    /* add your stuff here */

    return SUCCESS;
}
/* }}} */

/* {{{ PHP_RINIT_FUNCTION */
PHP_RINIT_FUNCTION(pHash) {
    /* add your stuff here */

    return SUCCESS;
}
/* }}} */

/* {{{ PHP_RSHUTDOWN_FUNCTION */
PHP_RSHUTDOWN_FUNCTION(pHash) {
    /* add your stuff here */

    return SUCCESS;
}
/* }}} */

/* {{{ PHP_MINFO_FUNCTION */
PHP_MINFO_FUNCTION(pHash) {
    if (!sapi_module.phpinfo_as_text) {
        php_printf("<img src='");
        if (SG(request_info).request_uri) {
            php_printf("%s", (SG(request_info).request_uri));
        }
        php_printf("' align='right' alt='image' border='0'>\n");

        php_printf("pHash\n");
        php_info_print_table_start();
        php_info_print_table_row(2, "Version", PHP_PHASH_VERSION " (beta)");
        php_info_print_table_row(2, "Released", "2013-04-23");
        php_info_print_table_row(2, "CVS Revision", "$Id: $");
        php_info_print_table_row(2, "Authors",
                                 "Evan Klinger 'eklinger@phash.org' (lead)\n");
        php_info_print_table_end();
        /* add your stuff here */
    }
}
/* }}} */


/* {{{ proto resource ph_image_hash ph_dct_imagehash(string file)
  pHash DCT image hash */
PHP_FUNCTION(ph_dct_imagehash) {
    ulong64 *return_res;
    long return_res_id = -1;

    const char *file = NULL;
    int file_len = 0;

    if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "s", &file,
                              &file_len) == FAILURE) {
        return;
    }

    ulong64 *hash = (ulong64 *)malloc(sizeof(ulong64));
    int ret = ph_dct_imagehash(file, *hash);
    if (ret != 0) {
        free(hash);
        RETURN_FALSE;
    } else
        return_res = hash;

    RETURN_RES(zend_register_resource(return_res, le_ph_image_hash));
}
/* }}} ph_dct_imagehash */


/* {{{ proto float ph_image_dist(resource ph_image_hash h1,resource
  ph_image_hash h2) pHash image distance. */
PHP_FUNCTION(ph_image_dist) {
    zval *h1_res = NULL;
    int h1_resid = -1;
    ulong64 *h1;
    zval *h2_res = NULL;
    int h2_resid = -1;
    ulong64 *h2;

    if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "rr", &h1_res,
                              &h2_res) == FAILURE) {
        return;
    }

    if ((h1 = (ulong64 *)zend_fetch_resource2(Z_RES_P(h1_res), "ph_image_hash", h1_resid, le_ph_image_hash)) == NULL) {
        RETURN_FALSE;
    }
    if ((h2 = (ulong64 *)zend_fetch_resource2(Z_RES_P(h2_res), "ph_image_hash", h2_resid, le_ph_image_hash)) == NULL) {
        RETURN_FALSE;
    }

    if (h1 && h2) {
        int dist = ph_hamming_distance(*h1, *h2);
        RETURN_DOUBLE(dist);
    } else
        RETURN_DOUBLE(-1);
}
/* }}} ph_image_dist */


#endif /* HAVE_PHASH */

/*
 * Local variables:
 * tab-width: 4
 * c-basic-offset: 4
 * End:
 * vim600: noet sw=4 ts=4 fdm=marker
 * vim<600: noet sw=4 ts=4
 */
 